#
# Configuration
#
language: c
dist: xenial

#
# Build Dependencies
#
before_script:

  #
  # Build Folder
  #
  - mkdir build
  - cd build

  #
  # Update / Install CMake
  #
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p external/cmake
      pushd external/cmake
      wget https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.sh
      chmod +x cmake-*-Linux-x86_64.sh
      ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
      export PATH="${PWD}/bin:$PATH"
      popd
    else
      if ! brew ls --version cmake &>/dev/null; then brew update; brew install cmake; fi
    fi

#
# Build Matrix
#
matrix:
  include:

  #
  # Git Check
  #
  - os: linux
    env:
      - TEST="Git Check"
    script:
      - |
        if [[ -n $(git diff --check HEAD^) ]]; then
          echo "You must remove whitespace before submitting a pull request"
          echo ""
          git diff --check HEAD^
          exit -1
        fi

  #
  # Clang Format
  #
  - os: linux
    env:
      - TEST="Clang Format"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
    script:
      - cmake -DENABLE_CLANG_FORMAT=ON -DCMAKE_C_COMPILER="g++-6" ..
      - make
      - make format
      - |
        if [[ -n $(git diff) ]]; then
          echo "You must run make format before submitting a pull request"
          echo ""
          git diff
          exit -1
        fi

  #
  # Clang Tidy
  #
  - os: linux
    env:
      - TEST="Clang Tidy"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-4.0
        packages:
          - clang-4.0
          - clang-tidy-4.0
          - gcc-6
          - g++-6
    script:
      - cmake -DENABLE_CLANG_TIDY=ON -DCMAKE_C_COMPILER="g++-6" ..
      - make
      - make tidy > output.txt
      - |
        if [[ -n $(grep "warning: " output.txt) ]] || [[ -n $(grep "error: " output.txt) ]]; then
            echo "You must pass the clang tidy checks before submitting a pull request"
            echo ""
            grep --color -E '^|warning: |error: ' output.txt
            exit -1;
        else
            echo -e "\033[1;32m\xE2\x9C\x93 passed:\033[0m $1";
        fi

  #
  # GCC 7
  #
  - os: linux
    env:
      - TEST="GCC 7"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
    script:
      - cmake -DCMAKE_C_COMPILER="gcc-8" ..
      - make
      - make test

  #
  # GCC 8
  #
  - os: linux
    env:
      - TEST="GCC 8"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
    script:
      - cmake -DCMAKE_C_COMPILER="gcc-8" ..
      - make
      - make test

  #
  # GCC 9
  #
  - os: linux
    env:
      - TEST="GCC 9"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-9
    script:
      - cmake -DCMAKE_C_COMPILER="gcc-9" ..
      - make
      - make test

  #
  # Clang 6
  #
  - os: linux
    env:
      - TEST="Clang 6"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-xenial-6.0
        packages:
          - clang-7
    script:
      - cmake -DCMAKE_C_COMPILER=clang-6 ..
      - make
      - make test

  #
  # Clang 7
  #
  - os: linux
    env:
      - TEST="Clang 7"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-xenial-7.0
        packages:
          - clang-7
    script:
      - cmake -DCMAKE_C_COMPILER=clang-7 ..
      - make
      - make test

  #
  # Clang 8
  #
  - os: linux
    env:
      - TEST="Clang 8"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-xenial-8
        packages:
          - clang-8
    script:
      - cmake -DCMAKE_C_COMPILER=clang-8 ..
      - make
      - make test

  #
  # Clang 9.0
  #
  - os: linux
    env:
      - TEST="Clang 9.0"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
          - clang-9
    script:
      - cmake -DCMAKE_C_COMPILER=clang-9 ..
      - make
      - make test

  #
  # XCode 9.4
  #
  - os: osx
    env:
      - TEST="XCode 9.4"
    osx_image: xcode9.4
    script:
      - cmake ..
      - make
      - make test

  #
  # XCode 10.3
  #
  - os: osx
    env:
      - TEST="XCode 10.3"
    osx_image: xcode10.3
    script:
      - cmake ..
      - make
      - make test

  #
  # XCode 11.3
  #
  - os: osx
    env:
      - TEST="XCode 11.3"
    osx_image: xcode11.3
    script:
      - cmake ..
      - make
      - make test